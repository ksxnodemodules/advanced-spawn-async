// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when executable does not exist onclose promise 1`] = `
Object {
  "info": Object {
    "args": Array [],
    "command": "SomethingThatDoesNotExist",
    "error": [Error: spawn SomethingThatDoesNotExist ENOENT],
    "options": Object {},
    "process": Anything,
  },
  "name": "InternalError",
}
`;

exports[`when executable does not exist onexit promise 1`] = `
Object {
  "info": Object {
    "args": Array [],
    "command": "SomethingThatDoesNotExist",
    "error": [Error: spawn SomethingThatDoesNotExist ENOENT],
    "options": Object {},
    "process": Anything,
  },
  "name": "InternalError",
}
`;

exports[`when process successfully terminated with full arguments onclose promise 1`] = `
Object {
  "args": Array [
    "hello",
    "world",
  ],
  "command": "echo",
  "options": Object {
    "env": Object {
      "HELLO": "WORLD",
    },
  },
  "output": "hello world
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "hello world
",
}
`;

exports[`when process successfully terminated with full arguments onexit promise 1`] = `
Object {
  "args": Array [
    "hello",
    "world",
  ],
  "command": "echo",
  "options": Object {
    "env": Object {
      "HELLO": "WORLD",
    },
  },
  "output": "hello world
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "hello world
",
}
`;

exports[`when process successfully terminated with minimal arguments close promise matches snapshot 1`] = `
Object {
  "args": Array [],
  "command": "echo",
  "options": Object {},
  "output": "
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "
",
}
`;

exports[`when process successfully terminated with minimal arguments exit promise matches snapshot 1`] = `
Object {
  "args": Array [],
  "command": "echo",
  "options": Object {},
  "output": "
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "
",
}
`;

exports[`when process successfully terminated with minimal arguments process 1`] = `
Object {
  "onclose": Promise {},
  "onexit": Promise {},
  "process": Anything,
}
`;

exports[`when process successfully terminated with same event onclose promise 1`] = `
Object {
  "args": Array [
    "hello",
    "world",
  ],
  "command": "echo",
  "options": Object {
    "event": "close",
  },
  "output": "hello world
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "hello world
",
}
`;

exports[`when process successfully terminated with same event onexit promise 1`] = `
Object {
  "args": Array [
    "hello",
    "world",
  ],
  "command": "echo",
  "options": Object {
    "event": "close",
  },
  "output": "hello world
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "hello world
",
}
`;

exports[`when process successfully terminated with specified stdin close promise 1`] = `
Object {
  "args": Array [],
  "command": "bash",
  "options": Object {},
  "output": "stdin foo
stdin bar
stderr foo
stderr bar
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "stderr foo
stderr bar
",
  "stdout": "stdin foo
stdin bar
",
}
`;

exports[`when process successfully terminated with specified stdin exit promise 1`] = `
Object {
  "args": Array [],
  "command": "bash",
  "options": Object {},
  "output": "stdin foo
stdin bar
stderr foo
stderr bar
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "stderr foo
stderr bar
",
  "stdout": "stdin foo
stdin bar
",
}
`;

exports[`when process successfully terminated with stdout and stderr onclose promise 1`] = `
Object {
  "args": Array [
    Any<String>,
  ],
  "command": StringContaining "node",
  "options": Object {
    "env": Object {
      "HELLO": "WORLD",
    },
  },
  "output": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
}
`;

exports[`when process successfully terminated with stdout and stderr onexit promise 1`] = `
Object {
  "args": Array [
    Any<String>,
  ],
  "command": StringContaining "node",
  "options": Object {
    "env": Object {
      "HELLO": "WORLD",
    },
  },
  "output": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
  "process": Anything,
  "signal": null,
  "status": 0,
  "stderr": "",
  "stdout": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
}
`;

exports[`when process terminated with non-zero status code onclose promise 1`] = `
Object {
  "info": Object {
    "args": Array [
      Any<String>,
    ],
    "command": StringContaining "node",
    "options": Object {
      "env": Object {
        "HELLO": "WORLD",
      },
    },
    "output": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
    "process": Anything,
    "signal": null,
    "status": 123,
    "stderr": "",
    "stdout": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
  },
  "name": "TerminationError",
}
`;

exports[`when process terminated with non-zero status code onexit promise 1`] = `
Object {
  "info": Object {
    "args": Array [
      Any<String>,
    ],
    "command": StringContaining "node",
    "options": Object {
      "env": Object {
        "HELLO": "WORLD",
      },
    },
    "output": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
    "process": Anything,
    "signal": null,
    "status": 123,
    "stderr": "",
    "stdout": "stdout[0]
stderr[0]
stdout[1]
stdout[2]
stderr[1]
stderr[2]
{ env: { HELLO: 'WORLD' } }
",
  },
  "name": "TerminationError",
}
`;
